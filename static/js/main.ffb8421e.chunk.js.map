{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","console","log","data","results","backdrop_path","fetchData","poster_path","className","map","movie","index","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","request1","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","setshow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffb8421e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// base url make  requeste to the  movies database\r\nconst instance = axios.create({\r\n    baseURL:\"http://api.themoviedb.org/3\"\r\n});\r\n\r\n\r\n\r\nexport default instance;\r\n\r\n// for understandign\r\n// instance.get(\"/foo-bar\");\r\n\r\n// // \"http://api.themoviedb.org/3/foo-bar\"","import React, { useState, useEffect } from \"react\";\r\nimport instance from \"./axios\"; // jruri nathi export kryu ej name aapyu defualt hoy to aiya kai pn name aapi skay\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\n\r\n\r\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\r\n  // es7 new features props vgr direct je lkhyu hoy e other wise props.title\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n  // A snippet of code which runs based build on speacefic condtions/variables\r\n\r\n  useEffect(() => {\r\n    // if [] ,run once when  the row loads ,and don't run again\r\n\r\n    async function fetchData() {\r\n      const request = await instance.get(fetchUrl);\r\n      // http://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_networks=213\r\n      console.log(request.data.results[0].backdrop_path);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, [fetchUrl]); //  jyare url ni value change thay tyrepn use effect call thay\r\n\r\n  const opts = {\r\n    height:\"390\",\r\n    width:\"100%\",\r\n    playerVars:{\r\n      autoplay:1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie)=>{\r\n    if(trailerUrl){\r\n      setTrailerUrl(\"\");\r\n    }else{\r\n      movieTrailer(movie?.name || \"\")   \r\n      .then((url)=>{\r\n        const urlParams = new URLSearchParams(new URL(url).search);\r\n        setTrailerUrl(urlParams.get(\"v\"));\r\n\r\n      })\r\n      .catch((error)=> console.log(error));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  console.log(movies.poster_path);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {/* serverl row poster */}\r\n        {movies.map((movie, index) => {\r\n          return (\r\n            <img\r\n              key={movie.id}\r\n              onClick={()=> handleClick(movie)}\r\n              className={`row__poster ${isLargeRow && \"row_posterLarge\"} `}\r\n              src={` ${base_url}${\r\n                isLargeRow ? movie.poster_path : movie.backdrop_path // means khali first row ni value true 6 atle eni hieght vhadre ths eusing poster path else bacdrop thi thumbnail ni jm aavse\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      { trailerUrl && <YouTube videoId={trailerUrl} opts={opts} /> }\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n\r\n// // http://www.youtube.com/watch?v=XtMTHy8QkQU  v = niche urlparams ma 6 e ema value aavse\r\n// aa ek npm package 6 je pn name hs emovie nu enu traile fatch karse and promieses return kare6","const API_KEY = \"920e1faf6371664a97a9a11cf38b59e9\";\r\n\r\nconst request = {\r\n  fetchTrending: `trending/all/week?api_key=${API_KEY}&language=en-in`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `movie/top_rated?api_key=${API_KEY}&language=en-in`,\r\n  fetchActionMovies: `discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default request;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport instance from \"./axios\";\r\nimport request from \"./request\";\r\nimport \"./Banner.css\";\r\n\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request1 = await instance.get(request.fetchNetflixOriginals);\r\n      setMovie(\r\n        request1.data.results[\r\n          Math.floor(Math.random() * request1.data.results.length - 1) // [ aama multi plse hse khali random joie ek to] // measn aray ni length hse enmano koi pn random num hse e img show thse\r\n        ]\r\n      );\r\n      return request1;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(movie);\r\n\r\n  function truncate(str,n){\r\n    return str?.length > n ? str.substr(0,n-1) + \"...\":str;  // easyj 6 150 krta vdhi jse to 150j rese niche call karyo 6 descriptin ma\r\n  }\r\n\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"http://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        {/* title */}\r\n        <h1 className=\"banner__title\" >{movie?.title || movie?.name || movie?.original_name}</h1>\r\n\r\n        {/* div > 2 buttons */}\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        {/* description */}\r\n        <h1 className=\"banner__description\">\r\n        {truncate(movie?.overview,150)}\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n\r\n// understanding mate var ma store kraine b use kari skaay\r\n// const randm = Math.floor(Math.random() * request.data.results.length - 1);\r\n// console.log(request.data.results[randm]); // [ aama multi plse hse khali random joie ek to] // measn aray ni length hse enmano koi pn random num hse e img show thse\r\n\r\n/* <h1>{movie?.title || movie?.name || movie?.original_name}</h1> */ // this line means 1 na hoy to second ena hoy to third\r\n","import React ,{useEffect, useState} from 'react';\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => {\r\n\r\n    const [show,setshow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY > 100){\r\n                setshow(true);\r\n            }else setshow(false);\r\n        });\r\n\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"} `}>\r\n            <img\r\n            className=\"nav__logo\" \r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"netflixlogo\" />\r\n           <img\r\n           className=\"nav__avtar\"\r\n            src=\"./img/profile.png\" alt=\"profile img\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport request from \"./request\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* navbaar */}\n      <Nav />\n\n      {/* Banner */}\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={request.fetchNetflixOriginals}\n        isLargeRow\n      />\n\n      <Row title=\"Trending Now\" fetchUrl={request.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={request.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={request.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={request.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={request.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={request.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={request.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}